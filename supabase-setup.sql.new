-- Setup tables for the bulletin board application with fully anonymous access

-- Create the engrams (posts) table
CREATE TABLE IF NOT EXISTS public.engrams (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title TEXT NOT NULL,
    content TEXT NOT NULL,
    user_id TEXT NULL, -- Use a client-generated ID instead of UUID reference
    cluster TEXT DEFAULT 'general',
    upvotes INTEGER DEFAULT 0,
    downvotes INTEGER DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Create the votes table to track user votes (using client-generated IDs)
CREATE TABLE IF NOT EXISTS public.votes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    engram_id BIGINT REFERENCES public.engrams(id) ON DELETE CASCADE,
    device_id TEXT NOT NULL, -- Use device ID instead of user_id for anonymous voting
    vote_type TEXT NOT NULL CHECK (vote_type IN ('up', 'down')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    UNIQUE (engram_id, device_id) -- Ensure one vote per device per engram
);

-- Create indexes for better query performance
CREATE INDEX IF NOT EXISTS engrams_cluster_idx ON public.engrams (cluster);
CREATE INDEX IF NOT EXISTS engrams_user_id_idx ON public.engrams (user_id);
CREATE INDEX IF NOT EXISTS votes_engram_id_idx ON public.votes (engram_id);
CREATE INDEX IF NOT EXISTS votes_device_id_idx ON public.votes (device_id);

-- Set up Row Level Security (RLS) policies for anonymous access

-- Enable RLS on the tables
ALTER TABLE public.engrams ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.votes ENABLE ROW LEVEL SECURITY;

-- ENGRAM POLICIES

-- Anyone can read engrams
CREATE POLICY "Anyone can read engrams" 
ON public.engrams FOR SELECT 
USING (true);

-- Anyone can create engrams
CREATE POLICY "Anyone can create engrams" 
ON public.engrams FOR INSERT 
USING (true);

-- Anyone can update engrams (consider adding device_id verification for production)
CREATE POLICY "Anyone can update engrams" 
ON public.engrams FOR UPDATE 
USING (true);

-- Anyone can delete engrams (consider adding device_id verification for production)
CREATE POLICY "Anyone can delete engrams" 
ON public.engrams FOR DELETE 
USING (true);

-- VOTES POLICIES

-- Anyone can read votes
CREATE POLICY "Anyone can read votes" 
ON public.votes FOR SELECT 
USING (true);

-- Anyone can create votes
CREATE POLICY "Anyone can create votes" 
ON public.votes FOR INSERT 
USING (true);

-- Anyone can update votes (consider adding device_id verification for production)
CREATE POLICY "Anyone can update votes" 
ON public.votes FOR UPDATE 
USING (true);

-- Anyone can delete votes (consider adding device_id verification for production)
CREATE POLICY "Anyone can delete votes" 
ON public.votes FOR DELETE 
USING (true);

-- For added security in production:
-- 1. Add more restrictive policies to prevent abuse
-- 2. Add rate limiting
-- 3. Consider implementing device fingerprinting for tracking repeated votes
